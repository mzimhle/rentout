<?php/* Add this on all pages on top. */set_include_path($_SERVER['DOCUMENT_ROOT'].'/'.PATH_SEPARATOR.realpath(__DIR__.'/../../public_html/library/classes/').PATH_SEPARATOR.realpath(__DIR__.'/../../public_html/'));/*** Standard includes */require_once 'config/database.php';require_once 'config/smarty.php';/*** Check for login */require_once 'includes/auth.php';/* objects. */require_once 'class/participant.php';require_once 'class/File.php';$participantObject 	= new class_participant();$fileObject				= new File(array('gif', 'png', 'jpg', 'jpeg'));if (isset($_GET['code']) && trim($_GET['code']) != '') {		$code = trim($_GET['code']);		$participantData = $participantObject->getByCode($code);	if($participantData) {		$smarty->assign('participantData', $participantData);	} else {		header('Location: /participant/view/');		exit;			}}/* Check posted data. */if(count($_POST) > 0) {	$errorArray		= array();	$data 				= array();	$formValid		= true;	$success			= NULL;	$areaByName	= NULL;		if(isset($_POST['areapost_code']) && trim($_POST['areapost_code']) == '') {		$errorArray['areapost_code'] = 'Area required';		$formValid = false;			}		if(isset($_POST['participant_name']) && trim($_POST['participant_name']) == '') {		$errorArray['participant_name'] = 'Name required';		$formValid = false;			}		if(isset($_POST['participant_surname']) && trim($_POST['participant_surname']) == '') {		$errorArray['participant_surname'] = 'Surname required';		$formValid = false;			}		if(isset($_POST['participant_email']) && trim($_POST['participant_email']) != '') {		if($participantObject->validateEmail(trim($_POST['participant_email'])) == '') {			$errorArray['participant_email'] = 'Needs to be a valid email address';			$formValid = false;			} else {						$email = isset($participantData) ? $participantData['participant_code'] : null;						$emailData = $participantObject->_participantlogin->checkEmail(trim($_POST['participant_email']), $email);			if($emailData) {				$errorArray['participant_email'] = 'Email already exists';				$formValid = false;							}		}	} else {		$errorArray['participant_email'] = 'Email is required';		$formValid = false;			}		if(isset($_POST['participant_cellphone']) && trim($_POST['participant_cellphone']) != '') {		if($participantObject->validateCell(trim($_POST['participant_cellphone'])) == '') {			$errorArray['participant_cellphone'] = 'Needs to be a valid cellphone';			$formValid = false;			}	}		if(isset($_POST['participant_idnumber']) && trim($_POST['participant_idnumber']) != '') {		if($participantObject->validateIDnumber(trim($_POST['participant_idnumber'])) == '') {			$errorArray['participant_idnumber'] = 'Needs to be a valid ID number';			$formValid = false;			} else {			$idnumber = isset($participantData) ? $participantData['participant_code'] : null;						$idnumberData = $participantObject->getByIDnumber(trim($_POST['participant_idnumber']), $idnumber);			if($idnumberData) {				$errorArray['participant_idnumber'] = 'ID Number already exists';				$formValid = false;							}					}	}		if(isset($_POST['participant_passport']) && trim($_POST['participant_passport']) == '') {		if(isset($_POST['participant_idnumber']) && trim($_POST['participant_idnumber']) == '') {			$errorArray['participant_passport'] = 'Please add passport if there is no ID number';			$formValid = false;			}	}		if(isset($_FILES['profilelogo'])) {		/* Check validity of the CV. */		if((int)$_FILES['profilelogo']['size'] != 0 && trim($_FILES['profilelogo']['name']) != '') {			/* Check if its the right file. */			$ext = $fileObject->file_extention($_FILES['profilelogo']['name']); 			if($ext != '') {								$checkExt = $fileObject->getValidateExtention('profilelogo', $ext);								if(!$checkExt) {					$errorArray['profilelogo'] = 'Invalid file type something funny with the file format';					$formValid = false;										} else {					/* Check width and height */					$profilelogo = getimagesize($_FILES['profilelogo']['tmp_name']);										if($profilelogo[0] < 150 || $profilelogo < 150) {						$errorArray['profilelogo'] = 'Image needs to have a width more than 150 pixels as well as a height that is more than 150 pixels';						$formValid = false;												}				}			} else {				$errorArray['profilelogo'] = 'Invalid file type';				$formValid = false;												}		} else {						switch((int)$_FILES['profilelogo']['error']) {				case 1 : $errorArray['profilelogo'] = 'The uploaded file exceeds the maximum upload file size, should be less than 1M'; $formValid = false; break;				case 2 : $errorArray['profilelogo'] = 'File size exceeds the maximum file size'; $formValid = false; break;				case 3 : $errorArray['profilelogo'] = 'File was only partically uploaded, please try again'; $formValid = false; break;				//case 4 : $errorArray['profilelogo'] = 'No file was uploaded'; $formValid = false; break;				case 6 : $errorArray['profilelogo'] = 'Missing a temporary folder'; $formValid = false; break;				case 7 : $errorArray['profilelogo'] = 'Faild to write file to disk'; $formValid = false; break;			}		}	}		if(count($errorArray) == 0 && $formValid == true) {		$data 	= array();						$data['areapost_code']			= trim($_POST['areapost_code']);				$data['participant_name']		= trim($_POST['participant_name']);				$data['participant_surname']	= trim($_POST['participant_surname']);					$data['participant_email']		= trim($_POST['participant_email']);				$data['participant_cellphone']	= trim($_POST['participant_cellphone']);			$data['participant_idnumber']	= trim($_POST['participant_idnumber']);			$data['participant_passport']	= trim($_POST['participant_passport']);						if(isset($participantData)) {					/*Update. */			$data['participant_code']	= $participantData['participant_code'];						$success	= $participantObject->updateParticipant($data, 'EMAIL');					$success	= $participantData['participant_code'];		} else {						$success = $participantObject->insertParticipant($data, 'EMAIL');						}		/* UPLOAD LOGO. */		if(isset($_FILES['profilelogo'])) {			if((int)$_FILES['profilelogo']['size'] != 0 && trim($_FILES['profilelogo']['name']) != '') {								$image = array();				$image['participant_image_name']	= $fileObject->getRandomFileName();				$image['participant_image_path']	= '';				$image['participant_image_ext']		= '';								$ext 		= strtolower($fileObject->file_extention($_FILES['profilelogo']['name']));									$filename	= $image['participant_image_name'].'.'.$ext;			 				$directory	= realpath(__DIR__.'/../../../public_html/').'/media/participant/'.$success.'/logo/';				$file		= $directory.$filename;									if(!is_dir($directory)) mkdir($directory, 0777, true);				foreach($fileObject->logo as $item) {										$newfilename = str_replace($filename, $item['code'].$filename, $file);										$uploadObject	= PhpThumbFactory::create($_FILES['profilelogo']['tmp_name']);					$uploadObject->resize($item['width'], $item['height']);					$uploadObject->save($newfilename);								}				$image['participant_image_path']	= '/media/participant/'.$success.'/logo/';				$image['participant_image_ext']		= '.'.$ext;				$image['participant_code']			= $success;				$where = $participantObject->getAdapter()->quoteInto('participant_code = ?', $success);				$participantObject->update($image, $where);									}		}					if(count($errorArray) == 0) {			header('Location: /participant/view/');				exit;				}	}		/* if we are here there are errors. */	$smarty->assign('errorArray', $errorArray);	}$smarty->display('participant/view/details.tpl');?>