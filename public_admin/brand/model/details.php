<?php/* Add this on all pages on top. */set_include_path($_SERVER['DOCUMENT_ROOT'].'/'.PATH_SEPARATOR.$_SERVER['DOCUMENT_ROOT'].'/library/classes/');/*** Standard includes */require_once 'config/database.php';require_once 'config/smarty.php';/*** Check for login */require_once 'includes/auth.php';/* objects. */require_once 'class/brand.php';require_once 'class/make.php';require_once 'class/model.php';require_once 'class/File.php';$brandObject 	= new class_brand();$makeObject 	= new class_make();$modelObject 	= new class_model();$fileObject 	= new File(array('gif', 'png', 'jpg', 'jpeg', 'gif'));if (isset($_GET['code']) && trim($_GET['code']) != '') {		$code = trim($_GET['code']);		$modelData = $modelObject->getByCode($code);		if($modelData) {		$smarty->assign('modelData', $modelData);	} else {		header('Location: /brand/model/');		exit;			}}if(isset($_GET['get_make_code'])) {	$errorArray				= array();	$errorArray['error']	= '';	$errorArray['result']	= 0;		$formValid				= true;	$success				= NULL;	$brandcode				= trim($_GET['get_make_code']);	$html 					= '<select id="make_code" name="make_code"><option value=""> ----- </option>';		$makeData = $makeObject->getByBrand($brandcode);		if($makeData) {				for($i = 0; $i < count($makeData); $i++) {			$selected = isset($modelData) && $modelData['make_code'] == $makeData[$i]['make_code'] ? 'selected' : '';			$html	.= '<option value="'.$makeData[$i]['make_code'].'" '.$selected.'>'.$makeData[$i]['make_name'].'</option>';				}			}	$html .= '</select>';	echo $html;	exit;}$brandpairs = $brandObject->pairs();if($brandpairs) $smarty->assign('brandpairs', $brandpairs);/* Check posted data. */if(count($_POST) > 0) {	$errorArray		= array();	$data 				= array();	$formValid		= true;	$success			= NULL;	$areaByName	= NULL;		if(isset($_POST['model_name']) && trim($_POST['model_name']) == '') {		$errorArray['model_name'] = 'Name of model required';		$formValid = false;			}		if(isset($_POST['brand_code']) && trim($_POST['brand_code']) == '') {		$errorArray['brand_code'] = 'Brand of model is required';		$formValid = false;			}		if(isset($_POST['make_code']) && trim($_POST['make_code']) == '') {		$errorArray['make_code'] = 'Make of model is required';		$formValid = false;			}		if(isset($_FILES['modellogo'])) {		/* Check validity of the CV. */		if((int)$_FILES['modellogo']['size'] != 0 && trim($_FILES['modellogo']['name']) != '') {			/* Check if its the right file. */			$ext = $fileObject->file_extention($_FILES['modellogo']['name']); 			if($ext != '') {								$checkExt = $fileObject->getValidateExtention('modellogo', $ext);								if(!$checkExt) {					$errorArray['modellogo'] = 'Invalid file type something funny with the file format';					$formValid = false;										} else {					/* Check width and height */					$modellogo = getimagesize($_FILES['modellogo']['tmp_name']);										if($modellogo[0] < 150 || $modellogo < 150) {						$errorArray['modellogo'] = 'Image needs to have a width more than 150 pixels as well as a height that is more than 150 pixels';						$formValid = false;												}				}			} else {				$errorArray['modellogo'] = 'Invalid file type';				$formValid = false;												}		} else {						switch((int)$_FILES['modellogo']['error']) {				case 1 : $errorArray['modellogo'] = 'The uploaded file exceeds the maximum upload file size, should be less than 1M'; $formValid = false; break;				case 2 : $errorArray['modellogo'] = 'File size exceeds the maximum file size'; $formValid = false; break;				case 3 : $errorArray['modellogo'] = 'File was only partically uploaded, please try again'; $formValid = false; break;				//case 4 : $errorArray['modellogo'] = 'No file was uploaded'; $formValid = false; break;				case 6 : $errorArray['modellogo'] = 'Missing a temporary folder'; $formValid = false; break;				case 7 : $errorArray['modellogo'] = 'Faild to write file to disk'; $formValid = false; break;			}		}	}			if(count($errorArray) == 0 && $formValid == true) {				$data 	= array();			$data['model_name']	= trim($_POST['model_name']);						$data['make_code']	= trim($_POST['make_code']);			if(isset($modelData)) {			/*Update. */			$where		= $modelObject->getAdapter()->quoteInto('model_code = ?', $modelData['model_code']);			$success	= $modelObject->update($data, $where);				$success	= $modelData['model_code'];		} else {			$success = $modelObject->insert($data);		}				/* Upload image if its added. */		if((int)$_FILES['modellogo']['size'] != 0 && trim($_FILES['modellogo']['name']) != '') {						$image = array();			$image['model_image_name']	= $fileObject->getRandomFileName();			$image['model_image_path']	= '';			$image['model_image_ext']	= '';						$ext 		= strtolower($fileObject->file_extention($_FILES['modellogo']['name']));								$filename	= $image['model_image_name'].'.'.$ext;						$directory	= realpath(__DIR__.'/../../../public_html/').'/media/model/'.$success.'/logo/';			$file		= $directory.$filename;				if(!is_dir($directory)) mkdir($directory, 0777, true);			/* Create files for this product type. */			foreach($fileObject->logo as $item) {								$newfilename = str_replace($filename, $item['code'].$filename, $file);								/* Create new file and rename it. */				$uploadObject	= PhpThumbFactory::create($_FILES['modellogo']['tmp_name']);				$uploadObject->resize($item['width'], $item['height']);				$uploadObject->save($newfilename);						}			$image['model_image_path']	= '/media/model/'.$success.'/logo/';			$image['model_image_ext']	= '.'.$ext;						$where = $modelObject->getAdapter()->quoteInto('model_code = ?', $success);			$modelObject->update($image, $where);							}				if(count($errorArray) == 0) {			header('Location: /brand/model/');				exit;				}					}		/* if we are here there are errors. */	$smarty->assign('errorArray', $errorArray);	}$smarty->display('brand/model/details.tpl');?>